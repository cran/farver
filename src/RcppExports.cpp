// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// convert_c
NumericMatrix convert_c(NumericMatrix colour, int from, int to);
RcppExport SEXP _farver_convert_c(SEXP colourSEXP, SEXP fromSEXP, SEXP toSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type colour(colourSEXP);
    Rcpp::traits::input_parameter< int >::type from(fromSEXP);
    Rcpp::traits::input_parameter< int >::type to(toSEXP);
    rcpp_result_gen = Rcpp::wrap(convert_c(colour, from, to));
    return rcpp_result_gen;
END_RCPP
}
// compare_c
NumericMatrix compare_c(NumericMatrix from, NumericMatrix to, int from_space, int to_space, int dist, bool sym);
RcppExport SEXP _farver_compare_c(SEXP fromSEXP, SEXP toSEXP, SEXP from_spaceSEXP, SEXP to_spaceSEXP, SEXP distSEXP, SEXP symSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type from(fromSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type to(toSEXP);
    Rcpp::traits::input_parameter< int >::type from_space(from_spaceSEXP);
    Rcpp::traits::input_parameter< int >::type to_space(to_spaceSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< bool >::type sym(symSEXP);
    rcpp_result_gen = Rcpp::wrap(compare_c(from, to, from_space, to_space, dist, sym));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_farver_convert_c", (DL_FUNC) &_farver_convert_c, 3},
    {"_farver_compare_c", (DL_FUNC) &_farver_compare_c, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_farver(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
